//borrowed from https://codepen.io/jakob-e/pen/doMoML
@function svg-url($svg){
    @if not str-index($svg,xmlns) {
        $svg: str-replace($svg, '<svg','<svg xmlns="http://www.w3.org/2000/svg"');
    }

    $encoded:'';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg)/$slice);

    @for $i from 1 through $loops {
        $chunk: str-slice($svg, $index, $index + $slice - 1);
        //
        //   Encode
        //
        $chunk: str-replace($chunk,'"', '\'');
        $chunk: str-replace($chunk,'%', '%25');
        $chunk: str-replace($chunk,'&', '%26');
        $chunk: str-replace($chunk,'#', '%23');
        $chunk: str-replace($chunk,'{', '%7B');
        $chunk: str-replace($chunk,'}', '%7D');
        $chunk: str-replace($chunk,'<', '%3C');
        $chunk: str-replace($chunk,'>', '%3E');

        //
        //    The maybe list
        //
        //    Keep size and compile time down
        //    ... only add on documented fail
        //
        //  $chunk: str-replace($chunk, '|', '%7C');
        //  $chunk: str-replace($chunk, '[', '%5B');
        //  $chunk: str-replace($chunk, ']', '%5D');
        //  $chunk: str-replace($chunk, '^', '%5E');
        //  $chunk: str-replace($chunk, '`', '%60');
        //  $chunk: str-replace($chunk, ';', '%3B');
        //  $chunk: str-replace($chunk, '?', '%3F');
        //  $chunk: str-replace($chunk, ':', '%3A');
        //  $chunk: str-replace($chunk, '@', '%40');
        //  $chunk: str-replace($chunk, '=', '%3D');

        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }
    @return url("data:image/svg+xml,#{$encoded}");
}
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @return if($index,
        str-slice($string, 1, $index - 1) + $replace +
        str-replace(str-slice($string, $index +
        str-length($search)), $search, $replace),
        $string);
}


$background: 			#4f5b74;
$content-bkg:			#232c3d;
$inside-content-bkg: 	#2f3a4f;
$text-color:			#a9adb5;
$placeholder:			#536079;
$highlight:				#64ff6c;
$unhighlight:			#3fd747;
$active:				#3bc943;

@keyframes load {
	0%   { left: 0; }
	50%  { left: calc(100% - 5px); }
	100% { left: 0; }
}

*
{
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1rem;
}

html
{
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
	color: $text-color;
	font-size: 16px;
}

body
{
	background-color: $background;
	display: flex;
	flex-direction: column;
	min-width: 0;
	min-height: 0;
	height: 100%;
	margin: 5px;

	input
	{
		border-radius: 0;
		border: 0;
		padding: 6px;
		border-bottom: 1px solid $unhighlight;
		background-color: transparent;
		color: $text-color;

		&:focus
		{
			border-bottom: 1px solid $highlight;
			outline: none;
		}

		&::placeholder
		{
			color: $placeholder;
		}

		&[disabled]
		{
			opacity: .5;
		}
	}

	input[type="checkbox"]
	{
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;

		width: 1rem;
		height: 1rem;
		vertical-align: middle;
		cursor: pointer;

		border-radius: 0;
		background-color: $inside-content-bkg;
		border: 1px solid $active;
		outline: 0 !important;
		position: relative;

		&:hover, &:active
		{
			background-color: $inside-content-bkg;
		}

		&:checked
		{
			outline: 0;

			&:before
			{
				content: '';
				display: block;
				position: absolute;
				background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="14" height="10" viewBox="0 0 14 10"><defs><style>.check { fill:#{$highlight}; fill-rule: evenodd; }</style></defs><path class="check" d="M309.707,184.766h0L302.04,192.7h0a0.976,0.976,0,0,1-1.414,0h0l-4.333-4.483h0a1.049,1.049,0,0,1-.293-0.731,1.018,1.018,0,0,1,1-1.035,0.981,0.981,0,0,1,.707.3h0l3.626,3.752,6.96-7.2h0A0.981,0.981,0,0,1,309,183a1.018,1.018,0,0,1,1,1.035A1.049,1.049,0,0,1,309.707,184.766Z" transform="translate(-296 -183)"/></svg>');
				width: calc(100% - 4px);
				height: calc(100% - 4px);
				background-repeat: no-repeat;
				background-size: contain;
				background-position: center;
				left: 2px;
				top: 2px;
			}
		}
	}

	button, .ui-button
	{
		border-radius: 0;
		background-color: $unhighlight;
		border: none;
		color: $content-bkg;

		&.round_button
		{
			border-radius: 100px;
		}

		&:hover
		{
			background-color: $highlight;
			border: none;
		}

		&:active, &:focus
		{
			color: white;
			background-color: $active;
			border: none;
		}
	}

	h1, h2, h3
	{
		line-height: 35px;
		margin: 0;
		font-weight: normal;
	}

	h1
	{
		font-size: 1.5rem;
	}

	h2
	{
		font-size: 1.3rem;
	}

	h3
	{
		font-size: 1.1rem;
	}

	.loading .loader,
	.loading.loader
	{
		flex: 0 0 auto;
		min-height: 0;
		height: 1px;
		position: relative;
		background-color: rgba(59, 201, 67, .3);
		margin: 10px 0 5px;

		&:after
		{
			content: '';
			background-color: $text-color;
			width: 5px;
			height: 5px;
			left: 0;
			top: -2px;
			display: block;
			position: absolute;
			animation-name: load;
  			animation-duration: 4s;
  			animation-iteration-count: infinite;
		}
	}

	span.tip
	{
		display: inline-block;
		width: 20px;
		height: 20px;
		border-radius: 20px;
		background-color: $text-color;
		margin: 0 5px -4px;
		position: relative;
		cursor: pointer;
		box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3), inset 1px 1px 1px rgba(255, 255, 255, 0.2);

		&:before
		{
			content: '?';
			color: $background;
			display: block;
			font-size: 1rem;
			position: absolute;
			top: 0;
			width: 20px;
			height: 20px;
			text-align: center;
			line-height: 20px;
		}
	}

	.ui-state-default a, a,
	.ui-state-default a:link,
	.ui-state-default a:visited
	{
		color: $unhighlight;
		text-decoration: none;

		&:hover
		{
			color: $highlight;
		}

		&:focus
		{
			outline: none;
		}
	}

	.ui-state-default,
	.ui-widget-content .ui-state-default,
	.ui-widget-header .ui-state-default,
	{
		background-color: $inside-content-bkg;
		color: $text-color;
	}

	.ui-state-active,
	.ui-widget-content
	.ui-state-active,
	.ui-widget-header .ui-state-active,
	{
		border: none;
		background: $active;
		font-weight: normal;
		color: $content-bkg;

		input[type="checkbox"]
		{
			border: 1px solid $inside-content-bkg;
		}
	}

	.container
	{
		background-color: $content-bkg;
		margin: 5px;
		padding: 5px;
		box-shadow: 2px 2px 11px rgba(0,0,0,.2);
	}

	.ui-widget.ui-widget-content,
	.ui-widget-header
	{
		border: none;
		background: transparent;
		border-radius: 0;
	}

	.ui-tabs.ui-widget.ui-widget-content
	{
		margin: 5px -5px -5px;
		padding: 0;
		display: flex;
		flex-direction: column;
		background-color: $inside-content-bkg;

		.ui-tabs-nav
		{
			flex: 0 0 auto;
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			padding: 0;

			.ui-tabs-tab
			{
				flex: 1 1 auto;
				display: flex;
				flex-direction: row;
				border-radius: 0;
				margin: 0 0 -1px;
				border: none;
				box-shadow: inset 0px 13px 15px -6px rgba(59, 201, 67,.2);
				border: 1px solid $content-bkg;
				outline: 0 !important;
				min-width: 0;

				&.ui-state-active
				{
					box-shadow: inset 0px -13px 15px -6px rgba(35, 44, 61, .2);

					a, a:hover
					{
						color: $content-bkg;
					}
				}

				&:first-child
				{
					margin: 0 0 -1px -1px;
				}

				&:last-child
				{
					margin: 0 -1px -1px 0;
				}

				.ui-tabs-anchor
				{
					flex: 1 1 auto;
					text-align: center;
					padding: 3px 5px;
					display: inline-block;
					overflow: hidden;
					white-space: nowrap;
					text-overflow: ellipsis;
				}

				input[type="checkbox"]
				{
					margin: 5px 5px 0 0;
					flex: 0 0 16px;
				}
			}
		}

		.ui-tabs-panel
		{
			flex: 1 1 auto;
			padding: 5px;
			overflow-y: auto;
			overflow-x: hidden;
			min-height: 0;
			background-color: $inside-content-bkg;
			position: relative;
			z-index: 1;
			border-top: 5px solid $inside-content-bkg;
		}
	}

	.ui-tooltip
	{
		padding: 8px;
		position: absolute;
		z-index: 9999;
		max-width: 300px;
		background-color: hsl(220, 7.5%, 80%) !important;
		border: none;
		color: $content-bkg !important;
	}

	#synonym_template, #result_type_template
	{
		display: none;
	}

	#title_words
	{
		display: flex;
		flex-direction: column;
		flex: 0 0 auto;
	}

	#title
	{
		flex: 0 0 auto;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;

		h1
		{
			color: $highlight;
			background-image:url('favicon_io/android-chrome-192x192.png');
			background-repeat: no-repeat;
			background-size: contain;
			background-position: left;

			&::first-letter
			{
				color: transparent;
			}
		}

		h1, h3
		{
			line-height: 28px;
			padding: 0px 10px;
		}
	}

	#words
	{
		#blend
		{
			display: none;
		}
	}

	#blender_syns
	{
		display: flex;
		flex-direction: column;
		flex: 1 1 auto;
		min-height: 0;
		width: 100%;
	}

	#blender
	{
		display: flex;
		flex-direction: column;
		margin-bottom: 2px;
		min-height: 40%;
		min-width: 0;
		display: none;

		#save_mashes
		{
			flex: 1 0 auto;
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			align-items: flex-start;
			max-height: 100px;
			min-height: 28px;
			overflow-y: auto;

			&.no_mashes
			{
				display: none;
			}
		}

		.mash
		{
			flex: 1 1 auto;
			margin: 3px;
			padding: 2px 5px;
			cursor: pointer;
			text-align: center;
			border-radius: 50px;
			box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3), inset 1px 1px 1px rgba(255, 255, 255, 0.2);
			min-width: 0;
			white-space: nowrap;
			text-overflow: ellipsis;
			overflow: hidden;
			color: $content-bkg;

			input {
				display: none;
			}

			&.filtered, &.filtered_syl
			{
				display: none;
			}

			span:nth-child(3)
			{
				text-decoration: underline;
			}

			.replaced
			{
				display: none;
			}

			.types
			{
				display: inline-block;
				float: left;

				span
				{
					display: inline-block;
					width: 8px;
					height: 8px;
					border-radius: 5px;
					background-color: #FFF;
					margin: 0 3px 0 0;
					box-shadow: inset -1px -1px 1px rgba(255,255,255,.3), inset 1px 1px 1px rgba(0,0,0,.3);

					&.mash_type_rhyme
					{
						background-color: hsl(120, 100%, 50%);
					}

					&.mash_type_rhyme_redup
					{
						background-color: hsl(140, 100%, 50%);
					}

					&.mash_type_iao
					{
						background-color: hsl(160, 100%, 50%);
					}

					&.mash_type_rhymeish
					{
						background-color: hsl(180, 100%, 60%);
					}

					&.mash_type_syl_match
					{
						background-color: hsl(240, 100%, 60%);
					}

					&.mash_type_syl_squish
					{
						background-color: hsl(280, 100%, 60%);
					}

					&.mash_type_first_letter
					{
						background-color: hsl(310, 100%, 60%);
					}

					&.mash_type_sounds_like
					{
						background-color: hsl(360, 100%, 60%);
					}
				}
			}

			&.mash_level_1
			{
				background-color: hsla(220, 7.5%, 60%, .8);

				&:hover
				{
					background-color: hsla(220, 7.5%, 60%, .9);
				}
			}

			&.mash_level_2
			{
				background-color: hsla(220, 7.5%, 70%, .8);

				&:hover
				{
					background-color: hsla(220, 7.5%, 70%, .9);
				}
			}

			&.mash_level_3
			{
				background-color: hsla(220, 7.5%, 80%, .8);

				&:hover
				{
					background-color: hsla(220, 7.5%, 80%, .9);
				}
			}

			&.mash_level_4, &.mash_level_5
			{
				background-color: hsla(220, 7.5%, 90%, .8);

				&:hover
				{
					background-color: hsla(220, 7.5%, 90%, .9);
				}
			}

			&.replace
			{
				box-shadow: 1px 1px 5px rgba(0,0,0,0.3), 0px 0px 5px rgba(255,255,0,.2), inset 0px 0px 3px 1px rgba(255,255,0, 0.5);

				span:not(.replaced)
				{
					display: none;
				}

				.replaced
				{
					display: inline-block;
				}
			}
		}

		#mods
		{
			flex: 0 0 auto;
			display: flex;
			flex-direction: row;

			h2
			{
				flex: 1 1 auto;
				padding-left: 5px;
			}

			input
			{
				flex: 0 1 200px;
				margin-left: 10px;
				min-width: 0;
			}
		}

		#combo_checks
		{
			flex: 0 0 auto;
			vertical-align: middle;
			padding-top: 3px;
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;

			span
			{
				flex: 0 0 auto;
				opacity: .5;

				&#show_as_list
				{
					width: 25px;
					height: 25px;
					display: block;
					background-image: url('list.svg');
					background-size: 100%;
					cursor: pointer;
					margin-left: 5px;
				}

				&#show_condensed
				{
					width: 25px;
					height: 25px;
					display: block;
					background-image: url("condense.svg");
					background-size: 100%;
					cursor: pointer;
					margin-left: 5px;
				}

				&:hover
				{
					opacity: .8;
				}

				&:active
				{
					opacity: 1;
				}
			}

			span#check_spacer
			{
				flex: 1 1 auto;
			}

			label
			{
				flex: 0 0 auto;
				margin: 2px 4px;
				line-height: 16px;
				display: inline-block;

				&[for="filter_check_rhyme"]
				{
					color: hsl(120, 100%, 50%);
				}

				&[for="filter_check_rhyme_redup"]
				{
					color: hsl(140, 100%, 50%);
				}

				&[for="filter_check_iao"]
				{
					color: hsl(160, 100%, 50%);
				}

				&[for="filter_check_rhymeish"]
				{
					color: hsl(180, 100%, 60%);
				}

				&[for="filter_check_syl_match"]
				{
					color: hsl(240, 100%, 60%);
				}

				&[for="filter_check_syl_squish"]
				{
					color: hsl(280, 100%, 60%);
				}

				&[for="filter_check_first_letter"]
				{
					color: hsl(310, 100%, 60%);
				}

				&[for="filter_check_sounds_like"]
				{
					color: hsl(360, 100%, 60%);
				}

				input[type="checkbox"]
				{
					display: inline-block;
					margin-right: 5px;
				}
			}
		}

		#blender_tabs
		{
			display: flex;
			flex-direction: column;
			flex: 1 1 auto;
			min-height: 0;
		}

		.permute
		{
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			align-items: flex-start;
			flex: 0 1 auto;
		}

		.word:last-child
		{
			border-bottom: none;
		}

		&:not(.show_as_list)
		{
			#show_condensed
			{
				opacity: .7;
			}
		}

		&.show_as_list
		{
			#show_as_list
			{
				opacity: .7;
			}

			.permute .mash
			{
				width: 100%;
				text-align: left;
			}
		}
	}

	#synonyms
	{
		display: flex;
		flex-direction: row;
		min-width: 0;
		min-height: 40%;
		flex: 1 1 auto;

		.input_word
		{
			display: flex;
			flex-direction: column;
			flex: 1 1 auto;
			min-width: 0;
			min-height: 0;
			overflow: hidden;

			&:first-child:nth-last-child(1)
			{
				width: 100%;
			}

			&:first-child:nth-last-child(2),
			&:first-child:nth-last-child(2) ~ .input_word
			{
				width: calc(50% - 5px);
			}

			&:first-child:nth-last-child(3),
			&:first-child:nth-last-child(3) ~ .input_word
			{
				width: calc(33% - 6px);
			}

			&:first-child:nth-last-child(4),
			&:first-child:nth-last-child(4) ~ .input_word
			{
				width: calc(25% - 8px);
			}

			h3.word
			{
				flex: 0 0 auto;
				font-weight: bold;
				text-align: center;
				color: $highlight;
			}

			&.loading
			{
				h4
				{
					display: none;
				}
			}

			h4
			{
				margin: 0;
				padding: 3px 5px;
				flex: 0 0 auto;
			}

			.use_words
			{
				flex: 1 1 auto;
				display: flex;
				flex-direction: row;
				flex-wrap: wrap;
				overflow: auto;
				min-height: 36px;
				max-height: 50%;

				.wd
				{
					flex: 1 1 auto;
					margin: 3px;
					padding: 2px 5px;
					cursor: pointer;
					text-align: center;
					border-radius: 50px;
					box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3), inset 1px 1px 1px rgba(255, 255, 255, 0.2);
					white-space: nowrap;
					text-overflow: ellipsis;
					min-width: 0;
					overflow: hidden;
					height: 20px;

					input
					{
						display: none;
					}
				}
			}

			.input_results
			{
				flex: 1 1 auto;
				min-height: 50%;
				display: flex;
				flex-direction: column;

				.input_result_tabs
				{
					flex: 1 1 auto;
					min-height: 0;
				}

				.tab_body
				{
					flex: 0 1 auto;
					display: flex;
					flex-wrap: wrap;
					min-width: 0;

					&[id^=error-]
					{
						.def
						{
							color: #F00;

							input[type="checkbox"]
							{
								display: none;
							}
						}
					}

					.sense
					{
						flex: 0 0 auto;
						display: flex;
						min-width: 0;
						flex-direction: column;
						width: 100%;

						.def
						{
							flex: 0 0 auto;
							min-width: 0;
							min-height: 0;
							margin: 5px;
							color: $text-color;

							input[type="checkbox"]
							{
								margin: 0 5px 5px 0;
							}
						}

						.list
						{
							flex: 0 0 auto;
							min-width: 0;
							min-height: 0;
							display: flex;
							flex-direction: row;
							flex-wrap: wrap;
							width: 100%;
							padding-bottom: 5px;

							.wd
							{
								flex: 1 1 auto;
								margin: 3px;
								padding: 2px 5px;
								cursor: pointer;
								text-align: center;
								border-radius: 50px;
								box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3), inset 1px 1px 1px rgba(255, 255, 255, 0.2);
								white-space: nowrap;
								text-overflow: ellipsis;
								min-width: 0;
								overflow: hidden;

								input
								{
									display: none;
								}
							}
						}

						.input_list
						{
							display: none;
						}

						.syn_list .wd
						{
							background-color: hsla(80, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(80, 100%, 50%, .8);
							}
						}

						.means_list .wd
						{
							background-color: hsla(110, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(110, 100%, 50%, .8);
							}
						}

						.rhyme_list .wd
						{
							background-color: hsla(140, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(140, 100%, 50%, .8);
							}
						}

						.rel_list .wd
						{
							background-color: hsla(170, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(170, 100%, 50%, .8);
							}
						}

						.near_list .wd
						{
							background-color: hsla(200, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(200, 100%, 50%, .8);
							}
						}

						.rhymeish_list .wd
						{
							background-color: hsla(230, 100%, 70%, .7);

							&:hover
							{
								background-color: hsla(230, 100%, 70%, .8);
							}
						}

						.sounds_like_list .wd
						{
							background-color: hsla(260, 100%, 70%, 0.7);

							&:hover
							{
								background-color: hsla(260, 100%, 70%, 0.8);
							}
						}

						.phrase_list .wd
						{
							background-color: hsla(290, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(290, 100%, 50%, .8);
							}
						}

						.ant_list .wd
						{
							background-color: hsla(320, 100%, 50%, .7);

							&:hover
							{
								background-color: hsla(320, 100%, 50%, .8);
							}
						}

						.err_list .wd
						{
							background-color: hsla(350, 100%, 50%, .7);
							color: #ffd209;

							&:hover
							{
								background-color: hsla(350, 100%, 50%, .8);
							}
						}
					}
				}
			}
		}
	}
}


::-webkit-scrollbar
{
	width: 15px;
	background-color: transparent;

	&:hover
	{
		background-color: rgba(0, 0, 0, .2);
	}

	&:vertical
	{
		border-top: 0px;
		border-bottom: 0px;
	}

	&:horizontal
	{
		border-left: 0px;
		border-right: 0px;
	}
}

::-webkit-scrollbar-thumb
{
	border: 4px solid transparent;
	border-radius: 999px;
	box-shadow: 0 0 0 5px hsla(220, 7.5%, 68.63%, .5) inset;
	min-height: 20px;

	&:active
	{
		box-shadow: 0 0 0 5px hsla(220, 7.5%, 68.63%, .6) inset;
	}

	&:vertical
	{
		background: transparent;
		-webkit-border-radius: 100px;
		margin: 0 5px;
	}
}

::-webkit-scrollbar-track
{
	border: 7px solid transparent;
	border-radius: 999px;
	box-shadow: 1px 1px 5px rgba(59, 201, 67, .3) inset;
}

::-webkit-scrollbar-corner
{
	background: transparent;
}

@media screen and (min-width: 1200px) {
  html.blended body
	{
		#blender_syns
		{
			flex-direction: row-reverse;
		}

		#synonyms
		{
			min-width: 50%;
			flex-direction: row;

			.input_word
			{
				width: calc(50% - 5px) !important;
			}
		}
  }
}

@media screen and (min-width: 900px) and (max-width: 1199px)  {
  html.blended body
	{
		#blender_syns
		{
			flex-direction: row-reverse;
		}

		#synonyms
		{
			min-width: 50%;
			flex-direction: column;

			.input_word
			{
				width: calc(100% - 20px) !important;
			}
		}
  }
}

@media screen and (max-width: 700px) {
	html.blended
	{
		height: 150%;

		body
		{
			#blender
			{
				max-height: 40%;
			}

			#synonyms
			{
				flex-direction: column;

				.input_word
				{
					width: calc(100% - 20px) !important;
				}
			}
		}
  }
}
/*

@media only screen
  and (min-device-width: 375px)
  and (max-device-width: 812px)
  and (-webkit-min-device-pixel-ratio: 3)
	and (orientation: portrait)
{
	html
	{
		font-size: 31px;
		min-height: calc(31px * 21);
		min-width: calc(31px * 29);
		border: 1px solid #FF0;
	}
}

@media only screen
  and (min-device-width: 375px)
  and (max-device-width: 812px)
  and (-webkit-min-device-pixel-ratio: 3)
	and (orientation: landscape)
{
		html
		{
			font-size: 19px;
			min-height: calc(19px * 21);
			min-width: calc(19px * 29);
			border: 1px solid #F00;

		}
}
*/
